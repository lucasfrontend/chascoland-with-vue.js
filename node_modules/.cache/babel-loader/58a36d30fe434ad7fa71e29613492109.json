{"ast":null,"code":"import Weather from '@/components/Weather.vue';\nimport TextHome from '@/components/items/TextHome.vue';\nimport axios from 'axios';\nexport default {\n  name: 'Home',\n  data() {\n    return {\n      showWeather: false,\n      nubosidad: '',\n      velocidad: '',\n      direccion: '',\n      temperatura: '',\n      hoy: ''\n    };\n  },\n  components: {\n    Weather,\n    TextHome\n  },\n  methods: {\n    getWeather() {\n      const lat = '-35.5404833067820';\n      const lon = '-58.049692027809016';\n      const part = 'hourly,daily';\n      const key = `e7ea28eea6e66941216ebf0b7faa1321`;\n      axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=${part}&appid=${key}`).then(res => {\n        console.log(res.data);\n        if (res.status == 200) {\n          this.nubosidad = res.data.current.clouds;\n          this.velocidad = res.data.current.wind_speed;\n          this.direccion = res.data.current.wind_deg;\n          this.temperatura = Math.round(res.data.current.temp);\n          this.status = res.data.current.weather[0].main;\n          console.log(\"estado actual es\", this.status);\n        } else {\n          console.log(\"nads\");\n        }\n      });\n    },\n    setDate() {\n      let d = new Date();\n      let months = ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'];\n      let days = ['Domingo', 'Lunes', 'Martes', 'Miercoles', 'Jueves', 'Viernes', 'Sabado'];\n      let day = days[d.getDay()];\n      let date = d.getDate();\n      let month = months[d.getMonth()];\n      let year = d.getFullYear();\n      let today = day + ' ' + date + ' de ' + month + ' ' + year;\n      console.log(today);\n      this.hoy = today;\n    }\n  },\n  mounted() {\n    this.getWeather();\n    this.setDate();\n  }\n};","map":{"version":3,"mappings":"AAuCA,OAAOA,OAAM,MAAO,0BAA0B;AAC9C,OAAOC,QAAO,MAAO,iCAAgC;AACrD,OAAOC,KAAI,MAAO,OAAM;AAExB,eAAe;EACXC,IAAI,EAAE,MAAM;EACZC,IAAI,GAAE;IACF,OAAO;MACHC,WAAW,EAAE,KAAK;MAClBC,SAAS,EAAE,EAAE;MACbC,SAAS,EAAE,EAAE;MACbC,SAAS,EAAE,EAAE;MACbC,WAAW,EAAE,EAAE;MACfC,GAAG,EAAE;IAET;EAEJ,CAAC;EACDC,UAAU,EAAE;IACVX,OAAO;IACPC;EACF,CAAC;EACDW,OAAO,EAAE;IACLC,UAAU,GAAE;MACR,MAAMC,GAAE,GAAI,mBAAkB;MAC9B,MAAMC,GAAE,GAAI,qBAAqB;MACjC,MAAMC,IAAG,GAAI,cAAc;MAC3B,MAAMC,GAAE,GAAK,kCAAiC;MAC9Cf,KAAK,CAACgB,GAAG,CAAE,uDAAsDJ,GAAI,QAAOC,GAAI,YAAWC,IAAK,UAASC,GAAI,EAAC,CAAC,CAACE,IAAI,CAChHC,GAAE,IAAK;QACHC,OAAO,CAACC,GAAG,CAACF,GAAG,CAAChB,IAAI,CAAC;QACrB,IAAGgB,GAAG,CAACG,MAAM,IAAE,GAAG,EAAC;UACf,IAAI,CAACjB,SAAQ,GAAIc,GAAG,CAAChB,IAAI,CAACoB,OAAO,CAACC,MAAM;UACxC,IAAI,CAAClB,SAAQ,GAAIa,GAAG,CAAChB,IAAI,CAACoB,OAAO,CAACE,UAAU;UAC5C,IAAI,CAAClB,SAAQ,GAAIY,GAAG,CAAChB,IAAI,CAACoB,OAAO,CAACG,QAAQ;UAC1C,IAAI,CAAClB,WAAU,GAAImB,IAAI,CAACC,KAAK,CAACT,GAAG,CAAChB,IAAI,CAACoB,OAAO,CAACM,IAAI,CAAC;UACpD,IAAI,CAACP,MAAK,GAAIH,GAAG,CAAChB,IAAI,CAACoB,OAAO,CAACO,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI;UAE9CX,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAC,IAAI,CAACC,MAAM;QAG9C,OAAO;UACHF,OAAO,CAACC,GAAG,CAAC,MAAM,CAAC;QACvB;MACJ,EAEH;IAEL,CAAC;IACDW,OAAO,GAAE;MACL,IAAIC,IAAI,IAAIC,IAAI,EAAE;MAClB,IAAIC,MAAK,GAAI,CAAC,OAAO,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,YAAY,EAAE,SAAS,EAAE,WAAW,EAAE,WAAW,CAAC;MAC1I,IAAIC,IAAG,GAAI,CAAC,SAAS,EAAE,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,QAAQ,EAAE,SAAS,EAAE,QAAQ,CAAC;MAErF,IAAIC,GAAE,GAAID,IAAI,CAACH,CAAC,CAACK,MAAM,EAAE,CAAC;MAC1B,IAAIC,IAAG,GAAIN,CAAC,CAACO,OAAO,EAAE;MACtB,IAAIC,KAAI,GAAIN,MAAM,CAACF,CAAC,CAACS,QAAQ,EAAE,CAAC;MAChC,IAAIC,IAAG,GAAIV,CAAC,CAACW,WAAW,EAAE;MAC1B,IAAIC,KAAI,GAAIR,GAAE,GAAI,GAAE,GAAIE,IAAG,GAAI,MAAK,GAAIE,KAAI,GAAI,GAAE,GAAIE,IAAI;MAC1DvB,OAAO,CAACC,GAAG,CAAEwB,KAAK;MAClB,IAAI,CAACpC,GAAE,GAAIoC,KAAK;IACpB;EACJ,CAAC;EACDC,OAAO,GAAE;IACL,IAAI,CAAClC,UAAU,EAAC;IAChB,IAAI,CAACoB,OAAO,EAAC;EACjB;AAEJ","names":["Weather","TextHome","axios","name","data","showWeather","nubosidad","velocidad","direccion","temperatura","hoy","components","methods","getWeather","lat","lon","part","key","get","then","res","console","log","status","current","clouds","wind_speed","wind_deg","Math","round","temp","weather","main","setDate","d","Date","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","today","mounted"],"sourceRoot":"","sources":["C:\\Users\\lucas\\OneDrive\\Escritorio\\Projects\\Proyecto Vue\\api-users\\src\\components\\Home.vue"],"sourcesContent":["<template>\r\n    <div class=\"app\">\r\n        <section class=\"\">\r\n            <Weather v-if=\"showWeather\"\r\n            :clouds=\"nubosidad\" \r\n            :wind_speed=\"velocidad\"\r\n            :wind_deg=\"direccion\"\r\n            :temp=\"temperatura\"\r\n            :today=\"hoy\"/>\r\n            <div>\r\n                <h3>Home</h3>\r\n            </div>\r\n            <p>Haber saltado de un avion por primera vez es una experiencia inolvidable e irrepetible, lo sabemos. Pero también sabemos que viniste por algo más... No es casualidad que hayas llegado hasta acá solo para probar qué pasaba con vos si saltabas de un avión.... Volar con tu propio cuerpo es algo bastante más increible que saltar arnesado a tu instructor, MUY difícil de explicar. Controlar un giro  tan solo bajando un brazo en caida libre es increible, y subir esa mano y cortar ese giro es más increible aún. Y hay más, en nuestro sagrado deporte siempre hay más. Podés aprendér a volar de head, de sit, de down, volar de panza, volar de .... Existen muchas formas de volar. \r\n            \r\n                En esta forma de vida la ambición personal. Comenzar a volar te formatea la cabeza. DEspiertan prioridades en tu vida que no conocías, que tenías ahí innatas y dormidas. Y que tienen que ver con tu felicidad plena. Con tus ganas de hacer reales tus sueños más intensos.\r\n            .  lo  En nuestro club el Paracaidismo es una forma de vida</p>\r\n    \r\n            Es normal que después de conocer el paracaidismo no estés para ningún cumpleaños, para ninguna reunión, y que no aparezcas ni en los casamiento con tal de seguir volando cada vez mejor, a los paracaidistas siempre nos reclaman y con mucha razón. Es que acá siempre tenemos a nuestra otra familia. \r\n            Desplazarte horizontalmente por la troposfera te va a encantar,         atravesar una nube es hermoso, pero más hermoso todavía es apuntarle a una nube y entonces atravesarla. es una de las primeras cosas que se pide a un alumno recién recibido, que sepa escapar.<p>Como siempre decimos en paracaidismo, planea tu vuelo y vuela tu plan</p>\r\n            <p>Lorem ipsum, dolor sit amet consectetur adipisicing elit. Laudantium voluptatem atque, dolore temporibus modi placeat tempora error nobis numquam est quisquam quibusdam provident nostrum suscipit maiores iure non nisi sequi. Lorem ipsum dolor sit amet consectetur adipisicing elit. Id velit, consectetur quia veniam porro alias, quisquam accusantium placeat eaque possimus, ea reiciendis. Dignissimos nostrum officia expedita nulla esse nesciunt minus!</p>\r\n            <p>que dia dificil</p>\r\n    \r\n            <p>El paracaidismo es un diamante en bruto</p>\r\n    \r\n            <p>\r\n                \r\n                menu click fuera de la pantalla y q se cierre\r\n                2022 te refcordaré como el peor año de mi vida, jueeeera\r\n            año 201....\r\n            Hoy ss el aniversario del intento de suicidio de mi ex,me dejó la casa llena de gas y  un mensaje de voz q transformé en una canción. Ustedes tuvieron novias tóxicas?)\r\n            </p>\r\n    \r\n        </section>\r\n        <TextHome />\r\n    </div>\r\n\r\n</template>\r\n\r\n<script>\r\nimport Weather from '@/components/Weather.vue';\r\nimport TextHome from '@/components/items/TextHome.vue'\r\nimport axios from 'axios'\r\n\r\nexport default {\r\n    name: 'Home',\r\n    data(){\r\n        return {\r\n            showWeather: false,\r\n            nubosidad: '',\r\n            velocidad: '',\r\n            direccion: '',\r\n            temperatura: '',\r\n            hoy: '',\r\n\r\n        }\r\n\r\n    },\r\n    components: {\r\n      Weather,\r\n      TextHome\r\n    },\r\n    methods: {\r\n        getWeather(){\r\n            const lat = '-35.5404833067820' ;\r\n            const lon = '-58.049692027809016';\r\n            const part = 'hourly,daily'; \r\n            const key = `e7ea28eea6e66941216ebf0b7faa1321`;\r\n            axios.get(`https://api.openweathermap.org/data/2.5/onecall?lat=${lat}&lon=${lon}&exclude=${part}&appid=${key}`).then(\r\n                res => {\r\n                    console.log(res.data);\r\n                    if(res.status==200){\r\n                        this.nubosidad = res.data.current.clouds;\r\n                        this.velocidad = res.data.current.wind_speed;\r\n                        this.direccion = res.data.current.wind_deg;\r\n                        this.temperatura = Math.round(res.data.current.temp);\r\n                        this.status = res.data.current.weather[0].main;\r\n\r\n                        console.log(\"estado actual es\",this.status)\r\n\r\n                        \r\n                    } else {\r\n                        console.log(\"nads\");\r\n                    }\r\n                }\r\n                    \r\n            );\r\n \r\n        },\r\n        setDate(){\r\n            let d = new Date();\r\n            let months = ['Enero', 'Febrero', 'Marzo', 'Abril', 'Mayo', 'Junio', 'Julio', 'Agosto', 'Septiembre', 'Octubre', 'Noviembre', 'Diciembre'];\r\n            let days = ['Domingo', 'Lunes', 'Martes', 'Miercoles', 'Jueves', 'Viernes', 'Sabado'];\r\n\r\n            let day = days[d.getDay()];\r\n            let date = d.getDate();\r\n            let month = months[d.getMonth()];\r\n            let year = d.getFullYear();\r\n            let today = day + ' ' + date + ' de ' + month + ' ' + year;\r\n            console.log( today)\r\n            this.hoy = today;\r\n        }\r\n    },\r\n    mounted(){\r\n        this.getWeather()\r\n        this.setDate()\r\n    }\r\n\r\n}\r\n\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}